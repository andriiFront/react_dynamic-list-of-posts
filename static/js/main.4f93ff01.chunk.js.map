{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","posts","postId","setPostId","className","map","post","key","id","userId","title","type","onClick","newPostId","BASE_URL","getUsers","a","fetch","then","response","json","data","getPosts","getPost","getComments","deleteComment","url","options","method","comments","addComment","name","email","body","JSON","stringify","NewCommentForm","setComments","useState","setName","setEmail","setBody","onSubmit","e","preventDefault","filter","comment","value","placeholder","onChange","target","PostDetails","setPost","hidden","setHidden","useEffect","arrComments","length","App","users","setUsers","setUserId","setPosts","arrUsers","user","i","arrPosts","prepPosts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f93ff01.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, postId, setPostId }) => {\n  const handleClick = (newPostId) => {\n    if (newPostId === postId) {\n      setPostId(null);\n\n      return;\n    }\n\n    setPostId(newPostId);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n                {' '}\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              onClick={() => handleClick(+post.id)}\n              className=\"PostsList__button button\"\n            >\n              {postId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getUsers = async() => fetch(`${BASE_URL}/users/`)\n  .then(response => response.json())\n  .then(data => data.data);\n\nexport const getPosts = async() => fetch(`${BASE_URL}/posts/`)\n  .then(response => response.json())\n  .then(data => data.data);\n\nexport const getPost = async id => fetch(`${BASE_URL}/posts/${id}`)\n  .then(response => response.json())\n  .then(data => data.data);\n\nexport const getComments = async() => fetch(`${BASE_URL}/comments/`)\n  .then(response => response.json())\n  .then(data => data.data);\n\nexport const deleteComment = async(id) => {\n  const url = `${BASE_URL}/comments/${id}`;\n  const options = {\n    method: 'DELETE',\n  };\n  const comments = await fetch(url, options);\n\n  return comments;\n};\n\nexport const addComment = async(postId, name, email, body) => {\n  const url = `${BASE_URL}/comments/`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId, name, email, body,\n    }),\n  };\n\n  return fetch(url, options);\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getComments, addComment } from '../../api/api';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!name || !email || !body) {\n      return;\n    }\n\n    addComment(postId, name, email, body)\n      .then(() => getComments())\n      .then(comments => setComments(comments.filter(\n        comment => comment.postId === postId,\n      )));\n\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setName(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={email}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={body}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(e) => {\n            setBody(e.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPost, getComments, deleteComment } from '../../api/api';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    getPost(postId).then(setPost);\n\n    getComments().then(arrComments => setComments(arrComments.filter(\n      comment => comment.postId === postId,\n    )));\n  }, [postId]);\n\n  const handleHide = () => {\n    setHidden(!hidden);\n  };\n\n  const handleDeleteComment = (id) => {\n    deleteComment(id)\n      .then(() => getComments())\n      .then(arrComments => setComments(arrComments.filter(\n        comment => comment.postId === postId,\n      )));\n  };\n\n  if (!post && !comments) {\n    return '';\n  }\n\n  return (\n    <div className=\"PostDetails\">\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleHide}\n        >\n          {hidden ? 'show' : 'hide'}\n          {' '}\n          {comments && comments.length}\n          {' '}\n          comments\n        </button>\n        {hidden || (\n          <ul className=\"PostDetails__list\">\n            {comments && comments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => handleDeleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.name}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <br />\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={postId} setComments={setComments} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  postId: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUsers, getPosts } from './api/api';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(null);\n\n  useEffect(() => {\n    getUsers().then(arrUsers => setUsers(\n      arrUsers.filter((user, i) => user.name && user.id === i + 1),\n    ));\n\n    getPosts().then(arrPosts => setPosts(arrPosts));\n  }, []);\n\n  const prepPosts = posts.filter(post => !userId || post.userId === userId);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={(e) => {\n              setUserId(+e.target.value);\n            }}\n          >\n\n            <option value=\"\">Select user</option>\n            <option value=\"\">Select all</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <span>{userId}</span>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={prepPosts}\n            setPostId={setPostId}\n            postId={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId && <PostDetails postId={postId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}